// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace PrWeb.Migrations
{
    [DbContext(typeof(OnlineProdavnicaContext))]
    partial class OnlineProdavnicaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Dostavljac", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BrTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CenaUsluge")
                        .HasColumnType("int");

                    b.Property<int?>("DostavljacProdavnicaID")
                        .HasColumnType("int");

                    b.Property<int>("Godine")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("DostavljacProdavnicaID");

                    b.ToTable("Dostavljac");
                });

            modelBuilder.Entity("Models.Nabavljac", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BrTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Nabavljac");
                });

            modelBuilder.Entity("Models.Narudzbina", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BrTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NarudzbinaDostavljacID")
                        .HasColumnType("int");

                    b.Property<int?>("NarudzbinaProdavnicaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NarudzbinaDostavljacID");

                    b.HasIndex("NarudzbinaProdavnicaID");

                    b.ToTable("Narudzbina");
                });

            modelBuilder.Entity("Models.Prodavnica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProdavnicaNabavljacID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProdavnicaNabavljacID");

                    b.ToTable("Prodavnica");
                });

            modelBuilder.Entity("Models.ProdavnicaProizvodSpoj", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int?>("ProdavnicaSpoj1ID")
                        .HasColumnType("int");

                    b.Property<int?>("ProizvodSpoj1ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProdavnicaSpoj1ID");

                    b.HasIndex("ProizvodSpoj1ID");

                    b.ToTable("ProdavnicaProizvod");
                });

            modelBuilder.Entity("Models.Proizvod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("Models.ProizvodNarudzbinaSpoj", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<int>("KolicinaProizvodaUNarudzbini")
                        .HasColumnType("int");

                    b.Property<int?>("NarudzbinaSpoj2ID")
                        .HasColumnType("int");

                    b.Property<int?>("ProizvodSpoj2ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NarudzbinaSpoj2ID");

                    b.HasIndex("ProizvodSpoj2ID");

                    b.ToTable("ProizvodNarudzbina");
                });

            modelBuilder.Entity("Models.Dostavljac", b =>
                {
                    b.HasOne("Models.Prodavnica", "DostavljacProdavnica")
                        .WithMany("ProdavnicaDostavljaci")
                        .HasForeignKey("DostavljacProdavnicaID");

                    b.Navigation("DostavljacProdavnica");
                });

            modelBuilder.Entity("Models.Narudzbina", b =>
                {
                    b.HasOne("Models.Dostavljac", "NarudzbinaDostavljac")
                        .WithMany("DostavljacNarudzbina")
                        .HasForeignKey("NarudzbinaDostavljacID");

                    b.HasOne("Models.Prodavnica", "NarudzbinaProdavnica")
                        .WithMany("ProdavnicaNarudzbine")
                        .HasForeignKey("NarudzbinaProdavnicaID");

                    b.Navigation("NarudzbinaDostavljac");

                    b.Navigation("NarudzbinaProdavnica");
                });

            modelBuilder.Entity("Models.Prodavnica", b =>
                {
                    b.HasOne("Models.Nabavljac", "ProdavnicaNabavljac")
                        .WithMany("NabavljacProdavnica")
                        .HasForeignKey("ProdavnicaNabavljacID");

                    b.Navigation("ProdavnicaNabavljac");
                });

            modelBuilder.Entity("Models.ProdavnicaProizvodSpoj", b =>
                {
                    b.HasOne("Models.Prodavnica", "ProdavnicaSpoj1")
                        .WithMany("ProdavnicaProizvod")
                        .HasForeignKey("ProdavnicaSpoj1ID");

                    b.HasOne("Models.Proizvod", "ProizvodSpoj1")
                        .WithMany("ProizvodProdavnica")
                        .HasForeignKey("ProizvodSpoj1ID");

                    b.Navigation("ProdavnicaSpoj1");

                    b.Navigation("ProizvodSpoj1");
                });

            modelBuilder.Entity("Models.ProizvodNarudzbinaSpoj", b =>
                {
                    b.HasOne("Models.Narudzbina", "NarudzbinaSpoj2")
                        .WithMany("NarudzbinaProizvod")
                        .HasForeignKey("NarudzbinaSpoj2ID");

                    b.HasOne("Models.Proizvod", "ProizvodSpoj2")
                        .WithMany("ProizvodNarudzbina")
                        .HasForeignKey("ProizvodSpoj2ID");

                    b.Navigation("NarudzbinaSpoj2");

                    b.Navigation("ProizvodSpoj2");
                });

            modelBuilder.Entity("Models.Dostavljac", b =>
                {
                    b.Navigation("DostavljacNarudzbina");
                });

            modelBuilder.Entity("Models.Nabavljac", b =>
                {
                    b.Navigation("NabavljacProdavnica");
                });

            modelBuilder.Entity("Models.Narudzbina", b =>
                {
                    b.Navigation("NarudzbinaProizvod");
                });

            modelBuilder.Entity("Models.Prodavnica", b =>
                {
                    b.Navigation("ProdavnicaDostavljaci");

                    b.Navigation("ProdavnicaNarudzbine");

                    b.Navigation("ProdavnicaProizvod");
                });

            modelBuilder.Entity("Models.Proizvod", b =>
                {
                    b.Navigation("ProizvodNarudzbina");

                    b.Navigation("ProizvodProdavnica");
                });
#pragma warning restore 612, 618
        }
    }
}
